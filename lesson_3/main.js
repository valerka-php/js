
// Задание No1. Проверка на пустоту
// Напишите функцию isEmpty(obj), которая возвращает true, если у объекта нет свойств,
//     иначе false.

let obj = {
    name: ' vasya',
};

function checkEmpty(obj){
    for (let k in obj){ // ecли выполниться цикл то в обьекте есть что либо , и вернется false
        return false;
    }
    return true;
}

console.log(checkEmpty(obj));

// Задание No2. Умножаем все числовые свойства на 2
// Создайте функцию multiplyNumeric(obj), которая умножает все числовые свойства
// объекта obj на 2.
// Обратите внимание, что multiplyNumeric не нужно ничего возвращать. Следует
// напрямую изменять объект.
//     P.S. Используйте typeof для проверки, что значение свойства числовое.

let obj = {
    name: 'vasya',
    age: 25,
    likeNum: 7,
    surname: 'qwerty',
};

function multiplyNumeric(obj) {
    for (let k in obj){
        if (typeof obj[k] === "number"){
            obj[k] *= 2;
            console.log(obj);
        }

    }
}

multiplyNumeric(obj);

// Задание No3. Ввод числового значения
// Создайте функцию readNumber, которая будет запрашивать ввод числового значения
// до тех пор, пока посетитель его не введёт.
//     функция должна возвращать числовое значение.
//     Также надо разрешить пользователю остановить процесс ввода, отправив пустую
// строку или нажав «Отмена». В этом случае функция должна вернуть null.

function readNumber(){
    let x = true;  // условие цикла
    while (x === true){
        let num = +prompt('Введите число 79');
        if (typeof num === "number" && num === 79){
            x = false;
            return console.log(num);  // вернет цифру 79
            // return console.log(typeof(num));   - выведет тип числа number;
        }
    }
}

readNumber();

// Задание No4. Случайное число от min до max
// Встроенный метод Math.random() возвращает случайное число от 0 (включительно) до
// 1 (но не включая 1)
// Напишите функцию random(min, max), которая генерирует случайное число с
// плавающей точкой от min до max (но не включая max).
// Пример работы функции:
//     alert( random(1, 5) ); // 1.2345623452
// alert( random(1, 5) ); // 3.7894332423
// alert( random(1, 5) ); // 4.3435234525

// здесь будет всегда только однозначое число , не совсем понял как в js сгенерировать двухзначное .
function rand(min,max){
    let x = 1;
    while (x){
        let num = (Math.random(min, max) * 10); // здесь случайное число от 0 до 1 генерируеться , и умножаеться на 10 что бы знак сместить на 1 в право и получить число больше 1.
        if (num >= min && num < max){
            x = 0;
            return num;
        }
    }
}

for (i = 0; i < 10; i++){
    console.log(rand(5,9));
}

// Задание No5. Случайное целое число от min до max
// Напишите функцию randomInteger(min, max), которая генерирует случайное целое
// (integer) число от min до max (включительно).
//     Любое число из интервала min..max должно появляться с одинаковой вероятностью.
//     Пример работы функции:
//     alert( randomInteger(1, 5) ); // 1
//
// alert( randomInteger(1, 5) ); // 3
// alert( randomInteger(1, 5) ); // 5


// здесь будет всегда только однозначое число , не совсем понял как в js сгенерировать двухзначное .
function rand(min,max){
    let x = 1;
    while (x){
        let num = (Math.random(min, max) * 10); // здесь случайное число от 0 до 1 генерируеться , и умножаеться на 10 что бы знак сместить на 1 в право и получить число больше 1.
        if (num >= min && num < max){
            x = 0;
            return Math.floor(num); // а здесь число с плавающей точкой через floor округляеться
        }
    }
}

for (i = 0; i < 10; i++){
    console.log(rand(5,9));
}

// Задание No6. Сделать первый символ заглавным
// Напишите функцию ucFirst(str), возвращающую строку str с заглавным первым
// символом.
//     Например:
// ucFirst("вася") == "Вася";


function ucFirst(txt){
    return txt[0].toUpperCase() + txt.slice(1); // toUpperCase() делает первую букву большой а через txt.slice прибавялеться к ней  начиная со второго символа
}

console.log(ucFirst('qwerty'));


// Задание No7. Проверка на спам
// Напишите функцию checkSpam(str), возвращающую true, если str содержит 'viagra' или
// 'XXX', а иначе false.
//     Функция должна быть нечувствительна к регистру:
//     checkSpam('buy ViAgRA now') == true
// checkSpam('free xxxxx') == true
// checkSpam("innocent rabbit") == false

function checkSpam(str){
    let strLow = str.toLowerCase(); //  сначала уменьшаю всю строку в маленький регистр
    return strLow.includes('viagra') || strLow.includes('xxx'); // а здесь проверяеться вхождение словая в строку и возвращается true или false
}

console.log(checkSpam('buy ViAgRA now'));

// Задание No8. Усечение строки
// Создайте функцию truncate(str, maxlength), которая проверяет длину строки str и, если
// она превосходит maxlength, заменяет конец str на "...", так, чтобы её длина стала равна
// maxlength.
//     Результатом функции должна быть та же строка, если усечение не требуется, либо,
//     если необходимо, усечённая строка.
//     Например:
// truncate("Вот, что мне хотелось бы сказать на эту тему:", 20) = "Вот, что мне
// хотело..."
// truncate("Всем привет!", 20) = "Всем привет!"

function truncate(str,maxlenght){
    if (str.length > maxlenght){
        return str.slice(0, maxlenght - 1) + '...' ;
    }else{
        return str;
    }
}

// let txt = "Вот, что мне хотелось бы сказать на эту тему:";
let txt = "Всем привет!";

console.log(truncate(txt,20));

// Задание No9. Выделить число
// Есть стоимость в виде строки . То есть сначала идёт знак валюты, а затем –
// число.
//     Создайте функцию , которая будет из такой строки выделять
// числовое значение и возвращать его.
//     Например:
//
// alert( extractCurrencyValue('$120') === 120 ); // true

function extractCurrencyValue(str){
    return str.slice(1);
}
let txt = "$120";

console.log(extractCurrencyValue(txt));

// Задание No10. Сумма введённых чисел
// Напишите функцию sumInput(), которая:
// • Просит пользователя ввести значения, используя prompt и сохраняет их в
// массив.
// • Заканчивает запрашивать значения, когда пользователь введёт не числовое
// значение, пустую строку или нажмёт «Отмена».
// • Подсчитывает и возвращает сумму элементов массива.
// • P.S. Ноль 0 – считается числом, не останавливайте ввод значений при вводе «0».

function sumInput(){

    let array = [];   // массив в который складыва.ю вводимые числа.
    while (true){
        let numbers = prompt('Введите число ');
        if (numbers === null || numbers === '' || isNaN(numbers) ){   // здесь проверяеться является ли введенные данные числом ил инет
            break;
        }else {
            array.push(+numbers);   // здесь происходит запись введеного числа после проверки в "конец" массива
        }
    }
    // а здесь весь массив чисел раскрываеться и плюсуеться по очереди
    let sum = 0;
    for (let value of array){
        sum += value;
    }

    return sum;

}

console.log(sumInput());

// Задание No12. Обязателен ли "else"?
//     Следующая функция возвращает true, если параметр age больше 18.
// В ином случае она запрашивает подтверждение через confirm и возвращает его
// результат:
//     function checkAge(age) {
//         if (age > 18) {
//             return true;
//         } else {
//             return confirm('Родители разрешили?');
//         }
//     }
// Будет ли эта функция работать как-то иначе, если убрать else?
//     function checkAge(age) {
//         if (age > 18) {
//             return true;
//         }
// // ...
//         return confirm('Родители разрешили?');   //  в этой функции всегда будет возвращаться confirm так как она не в условии и будет всегда срабатывать.
//     }
//     Есть ли хоть одно отличие в поведении этого варианта?

// Задание No13. Перепишите функцию, используя оператор '?' или '||'
//
// Следующая функция возвращает true, если параметр age больше 18.
// В ином случае она задаёт вопрос confirm и возвращает его результат.
//     function checkAge(age) {
//     if (age > 18) {
//         return true;
//     } else {
//         return confirm('Родители разрешили?');
//     }
// }
// Перепишите функцию, чтобы она делала то же самое, но без if, в одну строку.
//     Сделайте два варианта функции checkAge:


//     Используя оператор ?
function checkAge(age) {
    return (age > 18) ? true : confirm('Родители разрешили?');
}

console.log(checkAge(22));

//     Используя оператор ||
function checkAge(age) {
    return (age > 18) || confirm('Родители разрешили?');
}
console.log(checkAge(12));

// Задание No14. Функция min(a, b)
// Напишите функцию min(a,b), которая возвращает меньшее из чисел a и b.
//     Пример вызовов:
//     min(2, 5) == 2
// min(3, -1) == -1
// min(1, 1) == 1

function MinMax(num1,num2){
    if (num1 < num2){
        return num2;
    }else {
        return num1;
    }
}

console.log(MinMax(55,8));

// Задание No15. Функция pow(x,n)
// Напишите функцию pow(x,n), которая возвращает x в степени n. Иначе говоря,
//     умножает x на себя n раз и возвращает результат.
// pow(3, 2) = 3 * 3 = 9
// pow(3, 3) = 3 * 3 * 3 = 27
// pow(1, 100) = 1 * 1 * ...* 1 = 1
// Создайте страницу, которая запрашивает x и n, а затем выводит результат pow(x,n).
// P.S. В этой задаче функция обязана поддерживать только натуральные значения n, т.е.
//     целые от 1 и выше.

let x = prompt('число');
let n = prompt('степень');
function pow(x,n){
    let sum = 1;
    for (i = 0; i < n ; i++){
        sum *= x;
    }
    return sum;
}

while (true){
    if (n < 1){
        n = prompt('Степень должна быть больше 1')
    }else {
        console.log(pow(x,n));
        break;
    }
}

// Задание No16. Перепишите с использованием функции-стрелки
// Замените код Function Expression стрелочной функцией:
function ask(question, yes, no) {
    if (confirm(question)) yes()
    else no();
}
ask(
    "Вы согласны?",
    () => { alert("Вы согласились."); },
    () => { alert("Вы отменили выполнение."); }
);

// Задание No17. Робинзон Крузо
// Ваш месячный доход - 3333 попугая. Вы хотите купить пальму за 8000
// попугаев. Вычислите, за какой промежуток времени вы насобираете на
// пальму, при условии что ваши ежемесячные расходы составляют 1750
// попугаев.

let count = 0;
let money = 0;
let costPalm = 8000;
let spendMoneyForMonth= 1750;

while (money < costPalm){
    money += 3333;
    money -= spendMoneyForMonth;
    count++;
}

console.log(count);
console.log(money);

// Задание No18. Вопросы пользователю
// 1. Спросить у пользователя 10 чисел
// 2. Если число
// - положительное —> ничего не делать
// - отрицательная —> получить их сумму
// 3. Вывести сумму отрицательных чисел, которые ввел пользователь
// ВАЖНО: по условиям задачи в вашем коде должен быть только 1 prompt и
// только 1 цикл for

let result = 0;
for (i = 0; i <= 10; i++){
    let num = +prompt('введите число');
    if (num < 1){
        result += num;
    }
}

console.log(result);

// Задание No19. Скопирован ли массив?
//     Что выведет следующий код?
//     let fruits = ["Яблоки", "Груша", "Апельсин"];
// // добавляем новое значение в "копию"
// let shoppingCart = fruits;  // ["Яблоки", "Груша", "Апельсин"]
// shoppingCart.push("Банан");
// // что в fruits?  // ["Яблоки", "Груша", "Апельсин","Банан"];
// alert( fruits.length ); // длинна массива будет 3 потому что банан добавился в конец .


// Задание No20. Операции с массивами
// Давайте произведём 5 операций с массивом.
//     Создайте массив styles с элементами «Джаз» и «Блюз».
// Добавьте «Рок-н-ролл» в конец.
//
//     Замените значение в середине на «Классика». Ваш код для поиска значения в
// середине должен работать для массивов с любой длиной.
//     Удалите первый элемент массива и покажите его.
//     Вставьте «Рэп» и «Регги» в начало массива.
//     Массив по ходу выполнения операций:
//
//    Джаз, Блюз
// Джаз, Блюз, Рок-н-ролл
// Джаз, Классика, Рок-н-ролл
// Классика, Рок-н-ролл
// Рэп, Регги, Классика, Рок-н-ролл


let styles = ['Джаз', 'Блюз'];
console.log(styles);
styles.push('Рок-н-ролл');
console.log(styles);
styles[Math.floor((styles.length - 1) / 2)] = "Классика";
console.log(styles);
styles.shift();
console.log(styles);
styles.unshift('Реп','Регги');
console.log(styles);

// Задание No21. Вызов в контексте массива
// Каков результат? Почему?
let arr = ["a", "b"];

arr.push(function() {
    alert( this );
})
// выведется алерт с массивом всем
arr[2](); // вызов функции из массива в которой есть метод this обьекта arr .




// Задание No11. Подмассив наибольшей суммы
// На входе массив чисел, например: arr = [1, -2, 3, 4, -9, 6].
//     Задача: найти непрерывный подмассив в arr, сумма элементов в котором максимальна.
//     Функция getMaxSubSum(arr) должна возвращать эту сумму.
// Например:
//     getMaxSubSum([-1, 2, 3, -9]) = 5 (сумма выделенных)
// getMaxSubSum([2, -1, 2, 3, -9]) = 6
// getMaxSubSum([-1, 2, 3, -9, 11]) = 11
// getMaxSubSum([-2, -1, 1, 2]) = 3
// getMaxSubSum([100, -9, 2, -3, 5]) = 100
// getMaxSubSum([1, 2, 3]) = 6 (берём все)
// Если все элементы отрицательные – ничего не берём(подмассив пустой) и сумма равна
// «0»:
// getMaxSubSum([-1, -2, -3]) = 0
// Попробуйте придумать быстрое решение: O(n2), а лучше за О(n) операций.

// я нашел решение этой задачи но я не совсем разобрался как она работает =/ и что нужно делать.